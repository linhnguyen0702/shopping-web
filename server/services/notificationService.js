import { createNotification } from "../controllers/notificationController.js";
import { sendNotificationEmail } from "../services/emailService.js";

// T·∫°o v√† g·ª≠i th√¥ng b√°o
export const createAndSendNotification = async (notificationData) => {
  try {
    console.log(
      "üì§ createAndSendNotification ƒë∆∞·ª£c g·ªçi v·ªõi:",
      notificationData.title
    );

    // T·∫°o th√¥ng b√°o trong database
    const notification = await createNotification(notificationData);
    console.log("üíæ Notification ƒë√£ l∆∞u v√†o DB v·ªõi ID:", notification._id);

    // G·ª≠i email (async, kh√¥ng ch·ªù k·∫øt qu·∫£)
    sendNotificationEmail(notification).catch((error) => {
      console.error(
        "‚ùå L·ªói g·ª≠i email cho notification:",
        notification._id,
        error
      );
    });

    return notification;
  } catch (error) {
    console.error("‚ùå L·ªói t·∫°o v√† g·ª≠i th√¥ng b√°o:", error);
    throw error;
  }
};

// Notification cho ƒë∆°n h√†ng m·ªõi
export const notifyNewOrder = async (order) => {
  try {
    const notificationData = {
      type: "order",
      title: "ƒê∆°n h√†ng m·ªõi nh·∫≠n",
      message: `C√≥ ƒë∆°n h√†ng m·ªõi #${order._id} t·ª´ kh√°ch h√†ng ${
        order.address?.firstName || "N/A"
      } ${order.address?.lastName || ""}`,
      data: {
        "M√£ ƒë∆°n h√†ng": order._id,
        "Kh√°ch h√†ng": `${order.address?.firstName || ""} ${
          order.address?.lastName || ""
        }`.trim(),
        Email: order.address?.email || "N/A",
        "S·ªë ƒëi·ªán tho·∫°i": order.address?.phone || "N/A",
        "T·ªïng ti·ªÅn": `${order.amount?.toLocaleString() || 0} VNƒê`,
        "Ph∆∞∆°ng th·ª©c thanh to√°n": order.paymentMethod || "N/A",
        "S·ªë s·∫£n ph·∫©m": order.items?.length || 0,
      },
      priority: "high",
      isGlobal: true,
    };

    return await createAndSendNotification(notificationData);
  } catch (error) {
    console.error("L·ªói t·∫°o th√¥ng b√°o ƒë∆°n h√†ng m·ªõi:", error);
  }
};

// Notification cho user ƒëƒÉng k√Ω
export const notifyNewUserRegistration = async (user) => {
  try {
    const isAdmin = user.role === "admin";
    const userType = isAdmin ? "Admin" : "Kh√°ch h√†ng";
    const priority = isAdmin ? "high" : "medium";

    const notificationData = {
      type: "user",
      title: `${userType} ƒëƒÉng k√Ω m·ªõi`,
      message: `C√≥ ${userType.toLowerCase()} m·ªõi ƒëƒÉng k√Ω: ${user.name} (${
        user.email
      })`,
      metadata: {
        name: user.name,
        email: user.email,
        role: user.role || "user",
        userType: userType.toLowerCase(),
        registrationTime: new Date().toISOString(),
        userId: user._id,
      },
      priority: priority,
      isGlobal: true,
    };

    return await createAndSendNotification(notificationData);
  } catch (error) {
    console.error("L·ªói t·∫°o th√¥ng b√°o user ƒëƒÉng k√Ω:", error);
  }
};

// Notification cho user login (t·∫•t c·∫£ accounts)
export const notifyUserLogin = async (user) => {
  try {
    console.log(
      "üîî notifyUserLogin ƒë∆∞·ª£c g·ªçi cho user:",
      user.name,
      "role:",
      user.role
    );

    const isAdmin = user.role === "admin";
    const userType = isAdmin ? "Admin" : "Kh√°ch h√†ng";
    const priority = isAdmin ? "medium" : "low";

    const notificationData = {
      type: "login",
      title: `${userType} ƒëƒÉng nh·∫≠p`,
      message: `${userType} ${user.name} ƒë√£ ƒëƒÉng nh·∫≠p v√†o h·ªá th·ªëng`,
      metadata: {
        name: user.name,
        email: user.email,
        role: user.role || "user",
        userType: userType.toLowerCase(),
        loginTime: new Date().toISOString(),
        userId: user._id,
        ip: "127.0.0.1", // C√≥ th·ªÉ l·∫•y t·ª´ request
        userAgent: "Browser info", // C√≥ th·ªÉ l·∫•y t·ª´ request
      },
      priority: priority,
      isGlobal: true,
    };

    console.log("üìù T·∫°o notification v·ªõi data:", notificationData.title);
    const result = await createAndSendNotification(notificationData);
    console.log("‚úÖ Notification ƒë√£ t·∫°o th√†nh c√¥ng:", result?._id);

    return result;
  } catch (error) {
    console.error("‚ùå L·ªói t·∫°o th√¥ng b√°o user login:", error);
  }
};

// Notification cho s·∫£n ph·∫©m h·∫øt h√†ng
export const notifyLowStock = async (product, currentStock = 0) => {
  try {
    const notificationData = {
      type: "warning",
      title: "C·∫£nh b√°o h·∫øt h√†ng",
      message: `S·∫£n ph·∫©m "${product.name}" s·∫Øp h·∫øt h√†ng (c√≤n ${currentStock} s·∫£n ph·∫©m)`,
      data: {
        "S·∫£n ph·∫©m": product.name,
        SKU: product.sku || "N/A",
        "S·ªë l∆∞·ª£ng c√≤n l·∫°i": currentStock,
        Gi√°: `${product.price?.toLocaleString() || 0} VNƒê`,
        "Danh m·ª•c": product.category || "N/A",
        ID: product._id,
      },
      priority: "high",
      isGlobal: true,
    };

    return await createAndSendNotification(notificationData);
  } catch (error) {
    console.error("L·ªói t·∫°o th√¥ng b√°o h·∫øt h√†ng:", error);
  }
};

// Notification cho h·ªá th·ªëng
export const notifySystemEvent = async (
  title,
  message,
  data = {},
  priority = "medium"
) => {
  try {
    const notificationData = {
      type: "system",
      title,
      message,
      data,
      priority,
      isGlobal: true,
    };

    return await createAndSendNotification(notificationData);
  } catch (error) {
    console.error("L·ªói t·∫°o th√¥ng b√°o h·ªá th·ªëng:", error);
  }
};
